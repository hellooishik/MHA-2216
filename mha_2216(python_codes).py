# -*- coding: utf-8 -*-
"""MHA 2216(Python Codes).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14anTX-YgehK8sG24PRXe9VvlLUPQatZT

# BUSINESS PROCESS AND DATA ANALYSIS

# Step 1: Import Required Libraries and Files
"""

!pip install pandas matplotlib geopandas openpyxl

from google.colab import files
uploaded = files.upload()
for file_name in uploaded.keys():
    print(f"Uploaded file: {file_name}, Path: /content/{file_name}")

import pandas as pd
csv_url = "https://docs.google.com/spreadsheets/d/e/2PACX-1vR-fuNCzGRF4XZihTxy3w3ub_Q6xefZSoI2-c34kksD35OLXovf1YIH29fm_K70-7ODc0F29XYK2Ymz/pub?output=csv"
data = pd.read_csv(csv_url)
print(data.head())

"""# Step 2: Load the Excel File"""

import pandas as pd

# Define the file path to the Excel file
file_path = "MHA 2216.xlsx"

# Load the Excel file and parse the sheets
excel_data = pd.ExcelFile(file_path)
data_sheet = excel_data.parse('Data')
geo_distribution_sheet = excel_data.parse('Geographical Distribution')

# Preview the data
print(data_sheet.head())
print(geo_distribution_sheet.head())

"""# Step 3: Visualize Geographical Distribution of KFC Restaurants"""

!pip install geopandas matplotlib shapely

import geopandas as gpd
import matplotlib.pyplot as plt
import pandas as pd
world = gpd.read_file('/content/ne_110m_admin_0_countries (2).zip')
geo_distribution_cleaned = geo_distribution_sheet.dropna()
world = world.merge(geo_distribution_cleaned, left_on='ADMIN', right_on='Country Names', how='left')
#world map
fig, ax = plt.subplots(1, 1, figsize=(15, 10))
world.boundary.plot(ax=ax, linewidth=1)
world.plot(column='Number of Restaurants', ax=ax, cmap='Blues', legend=True,
           missing_kwds={"color": "lightgrey", "label": "No data"})

# labels for countries
for x, y, label in zip(world.geometry.centroid.x, world.geometry.centroid.y, world['Number of Restaurants']):
    if pd.notna(label):
        ax.text(x, y, int(label), fontsize=8, ha='center', color='black')

plt.title('Geographical Distribution of KFC Restaurants', fontsize=16)
ax.set_axis_off()
plt.show()

import matplotlib.pyplot as plt

# Clean and sort geographical data
geo_distribution_cleaned = geo_distribution_sheet.dropna()
geo_top_10 = geo_distribution_cleaned.sort_values(by='Number of Restaurants', ascending=False).head(10)

# Bar chart
plt.figure(figsize=(12, 6))
plt.barh(geo_top_10['Country Names'], geo_top_10['Number of Restaurants'], color='red')
plt.xlabel('Number of Restaurants')
plt.ylabel('Country')
plt.title('Top 10 Countries by Number of KFC Restaurants', fontsize=14)
plt.gca().invert_yaxis()  # Invert y-axis for readability
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

"""# Step 4: Plot Changes in the Number of Restaurants (2019-2023)"""

# Line plot for the number of restaurants
plt.figure(figsize=(12, 6))
plt.plot(data_sheet['Year'], data_sheet['Number of KFC Restaurants Worldwide'], marker='o', label='Number of Restaurants')
plt.title('Change in the Number of KFC Restaurants (2019-2023)', fontsize=14)
plt.xlabel('Year')
plt.ylabel('Number of Restaurants')
plt.grid(True)
plt.legend()
plt.show()

"""# change in the customer satisfaction Index for KFC

# Step 6: Plot Annual Revenue and Net Profit
"""

#annual revenue and net profit
plt.figure(figsize=(12, 6))
plt.plot(data_sheet['Year'], data_sheet['Annual Revenue in $ billion'], marker='o', color='blue', label='Annual Revenue ($ Billion)')
plt.plot(data_sheet['Year'], data_sheet['Net Profit in $ Million'], marker='o', color='purple', label='Net Profit ($ Million)')
plt.title('Annual Revenue and Net Profit of KFC (2019-2023)', fontsize=14)
plt.xlabel('Year')
plt.ylabel('Value ($)')
plt.grid(True)
plt.legend()
plt.show()

"""# Customer Satisfaction Analysis"""

csv_url = "https://docs.google.com/spreadsheets/d/e/2PACX-1vR-fuNCzGRF4XZihTxy3w3ub_Q6xefZSoI2-c34kksD35OLXovf1YIH29fm_K70-7ODc0F29XYK2Ymz/pub?output=csv"
satisfaction_data = pd.read_csv(csv_url)

# Filter relevant years
satisfaction_data = satisfaction_data[['Year', 'Customer Satisfaction Index in America']]
satisfaction_data = satisfaction_data[satisfaction_data['Year'].between(2019, 2023)]

# Calculate percentage change
satisfaction_data['Change (%)'] = satisfaction_data['Customer Satisfaction Index in America'].pct_change() * 100

# Print the data
print(satisfaction_data)

# Visualization
import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
plt.plot(satisfaction_data['Year'], satisfaction_data['Customer Satisfaction Index in America'], marker='o', color='blue', label='Satisfaction Index')
plt.title('Change in Customer Satisfaction Index for KFC (2019-2023)', fontsize=16)
plt.xlabel('Year')
plt.ylabel('Customer Satisfaction Index')
plt.grid(True, linestyle='--', alpha=0.6)
plt.legend()
plt.show()